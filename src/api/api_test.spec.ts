/**
 * VC Holder API
 * This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
 *
 * OpenAPI spec version: 0.0.3-unstable
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("HolderCredentialsApi", () => {
  let instance: api.HolderCredentialsApi
  beforeEach(function() {
    instance = new api.HolderCredentialsApi(config)
  });

  test("deleteCredential", () => {
    const id: api.Id = undefined
    return expect(instance.deleteCredential(id, {})).resolves.toBe(null)
  })
  test("deriveCredential", () => {
    const body: api.DeriveCredentialRequest = undefined
    return expect(instance.deriveCredential(body, {})).resolves.toBe(null)
  })
  test("getCredential", () => {
    const id: api.Id = undefined
    return expect(instance.getCredential(id, {})).resolves.toBe(null)
  })
  test("getCredentials", () => {
    const type: Array<string> = undefined
    return expect(instance.getCredentials(type, {})).resolves.toBe(null)
  })
})

describe("HolderPresentationsApi", () => {
  let instance: api.HolderPresentationsApi
  beforeEach(function() {
    instance = new api.HolderPresentationsApi(config)
  });

  test("deletePresentation", () => {
    const id: api.Id = undefined
    return expect(instance.deletePresentation(id, {})).resolves.toBe(null)
  })
  test("getPresentation", () => {
    const id: api.Id = undefined
    return expect(instance.getPresentation(id, {})).resolves.toBe(null)
  })
  test("getPresentations", () => {
    const type: Array<string> = undefined
    return expect(instance.getPresentations(type, {})).resolves.toBe(null)
  })
  test("provePresentation", () => {
    const body: api.ProvePresentationRequest = undefined
    return expect(instance.provePresentation(body, {})).resolves.toBe(null)
  })
})

describe("IssuerCredentialsApi", () => {
  let instance: api.IssuerCredentialsApi
  beforeEach(function() {
    instance = new api.IssuerCredentialsApi(config)
  });

  test("issueCredential", () => {
    const agency: string = "agency_example"
    const body: api.IssueCredentialRequest = undefined
    return expect(instance.issueCredential(agency, body, {})).resolves.toBe(null)
  })
  test("updateCredentialStatus", () => {
    const body: api.UpdateCredentialStatus = undefined
    return expect(instance.updateCredentialStatus(body, {})).resolves.toBe(null)
  })
})

describe("VerifierCredentialsApi", () => {
  let instance: api.VerifierCredentialsApi
  beforeEach(function() {
    instance = new api.VerifierCredentialsApi(config)
  });

  test("verifyCredential", () => {
    const body: api.VerifyCredentialRequest = undefined
    return expect(instance.verifyCredential(body, {})).resolves.toBe(null)
  })
})

describe("VerifierPresentationsApi", () => {
  let instance: api.VerifierPresentationsApi
  beforeEach(function() {
    instance = new api.VerifierPresentationsApi(config)
  });

  test("verifyPresentation", () => {
    const body: api.PresentationsVerifyBody = undefined
    return expect(instance.verifyPresentation(body, {})).resolves.toBe(null)
  })
})

